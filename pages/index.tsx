import type { GetServerSidePropsContext, GetStaticProps, NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import { useCallback, useState } from 'react'
import { ListItem } from '../Componet/ListItem/ListItem'
import { getShowcaseEntryIds } from '../libs/getAll'
import styles from '../styles/Home.module.css'
import { paginate } from '../utils/paginate'


const Home: NextPage<{
  data: Array<string>,
  count: number
}> = (props) => {
  const [page, setpage] = useState(1);
  const LIMIT = 12
  const ALL_PAGE = Math.ceil(props.count / LIMIT)

  const handelPreve = () => {
    if (page > 0 && page <= ALL_PAGE) {
      setpage(page - 1)
    }
    return


  }
  const handelNext = () => {

    if (page > 0 && page <= ALL_PAGE) {
      setpage(page + 1)
    }
    return
  }
  return (
    <div className={styles.container}>

      <Head>
        <title>Showcase Entry</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          ALL Entry
        </h1>


        <div className={styles.grid}>
          {props.data?.length && paginate(props.data, LIMIT, page).map((x, index) =>
            <ListItem data={x} key={index} />

          )}


        </div>
      </main>

      <footer className={styles.footer}>

        <h2>{page} </h2>
        <div className={styles.paginationContainer}>
          {page > 1 ? <button onClick={handelPreve}>{`<< `}</button> : ""}
          {Array(ALL_PAGE).fill(0).map((x, index) =>
            <p onClick={() => setpage(index + 1)} className={`styles.pagination ${page == index + 1 ? styles.me : ""}`} key={index}>{index + 1}</p>
          )}
          {page < ALL_PAGE ? <button onClick={handelNext}>{`>> `}</button> : ""}

        </div>


      </footer>
    </div>
  )
}


  

export async function getServerSideProps() {
  const data = await getShowcaseEntryIds();
  return {
    props: {
      data,
      count: data.length
    },
  };
}
export default Home
